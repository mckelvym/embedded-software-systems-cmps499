#! /usr/bin/vvp
:vpi_time_precision + 0;
:vpi_module "system";
S_0x8197dc0 .scope module, "top" "top";
 .timescale 0;
V_$0x81c8828 .var "A", 15, 0;
V_$0x81c8af8 .var "B", 15, 0;
V_$0x81c8d70 .net "Sum", 15, 0, L_0x81c9390, L_0x81c9728, L_0x81c9a38, L_0x81c9d48, L_0x81ca058, L_0x81ca368, L_0x81ca678, L_0x81ca988, L_0x81cac98, L_0x81cafa8, L_0x81cb2b8, L_0x81cb5c8, L_0x81cb8d8, L_0x81cbbe8, L_0x81cbef8, L_0x81cc208;
V_$0x81c8fe8 .net "carry", 14, 0, L_0x81c9660, L_0x81c9948, L_0x81c9c58, L_0x81c9f68, L_0x81ca278, L_0x81ca588, L_0x81ca898, L_0x81caba8, L_0x81caeb8, L_0x81cb1c8, L_0x81cb4d8, L_0x81cb7e8, L_0x81cbaf8, L_0x81cbe08, L_0x81cc118;
V_$0x81c92b0 .var "cin", 0, 0;
V_$0x81c92e0 .net "cout", 0, 0, L_0x81cc428;
S_0x81c8420 .scope module, "full_1bit_adder0" "my_1bit_full_adder_gate_level", S_0x8197dc0;
 .timescale 0;
L_0x81c9310 .functor XOR, V_$0x81c8af8[0], V_$0x81c92b0[0], C<0>, C<0>;
L_0x81c9390 .functor XOR, V_$0x81c8828[0], L_0x81c9310, C<0>, C<0>;
L_0x81c9438 .functor AND, V_$0x81c8af8[0], V_$0x81c92b0[0], C<1>, C<1>;
L_0x81c94d8 .functor AND, V_$0x81c8828[0], V_$0x81c92b0[0], C<1>, C<1>;
L_0x81c9580 .functor AND, V_$0x81c8828[0], V_$0x81c8af8[0], C<1>, C<1>;
L_0x81c9630 .functor OR, L_0x81c9580, L_0x81c94d8, C<0>, C<0>;
L_0x81c9660 .functor OR, L_0x81c9630, L_0x81c9438, C<0>, C<0>;
V_$0x81c8490 .net "a", 0, 0, V_$0x81c8828[0];
V_$0x81c8520 .net "b", 0, 0, V_$0x81c8af8[0];
V_$0x81c8588 .net "cin", 0, 0, V_$0x81c92b0[0];
V_$0x81c85f0 .net "cout", 0, 0, L_0x81c9660;
V_$0x81c8668 .net "cout_temp", 3, 0, L_0x81c9438, L_0x81c94d8, L_0x81c9580, L_0x81c9630;
V_$0x81c8750 .net "sum", 0, 0, L_0x81c9390;
V_$0x81c87b8 .net "sum_temp", 0, 0, L_0x81c9310;
S_0x81c7fd8 .scope module, "full_1bit_adder1" "my_1bit_full_adder_gate_level", S_0x8197dc0;
 .timescale 0;
L_0x81c9690 .functor XOR, V_$0x81c8af8[1], L_0x81c9660, C<0>, C<0>;
L_0x81c9728 .functor XOR, V_$0x81c8828[1], L_0x81c9690, C<0>, C<0>;
L_0x81c97d0 .functor AND, V_$0x81c8af8[1], L_0x81c9660, C<1>, C<1>;
L_0x81c9850 .functor AND, V_$0x81c8828[1], L_0x81c9660, C<1>, C<1>;
L_0x81c9800 .functor AND, V_$0x81c8828[1], V_$0x81c8af8[1], C<1>, C<1>;
L_0x81c9918 .functor OR, L_0x81c9800, L_0x81c9850, C<0>, C<0>;
L_0x81c9948 .functor OR, L_0x81c9918, L_0x81c97d0, C<0>, C<0>;
V_$0x81c8048 .net "a", 0, 0, V_$0x81c8828[1];
V_$0x81c80c0 .net "b", 0, 0, V_$0x81c8af8[1];
V_$0x81c8128 .net "cin", 0, 0, L_0x81c9660;
V_$0x81c81a8 .net "cout", 0, 0, L_0x81c9948;
V_$0x81c81f0 .net "cout_temp", 3, 0, L_0x81c97d0, L_0x81c9850, L_0x81c9800, L_0x81c9918;
V_$0x81c8350 .net "sum", 0, 0, L_0x81c9728;
V_$0x81c83e0 .net "sum_temp", 0, 0, L_0x81c9690;
S_0x81c7b88 .scope module, "full_1bit_adder2" "my_1bit_full_adder_gate_level", S_0x8197dc0;
 .timescale 0;
L_0x81c99a0 .functor XOR, V_$0x81c8af8[2], L_0x81c9948, C<0>, C<0>;
L_0x81c9a38 .functor XOR, V_$0x81c8828[2], L_0x81c99a0, C<0>, C<0>;
L_0x81c9ae0 .functor AND, V_$0x81c8af8[2], L_0x81c9948, C<1>, C<1>;
L_0x81c9b60 .functor AND, V_$0x81c8828[2], L_0x81c9948, C<1>, C<1>;
L_0x81c9b10 .functor AND, V_$0x81c8828[2], V_$0x81c8af8[2], C<1>, C<1>;
L_0x81c9c28 .functor OR, L_0x81c9b10, L_0x81c9b60, C<0>, C<0>;
L_0x81c9c58 .functor OR, L_0x81c9c28, L_0x81c9ae0, C<0>, C<0>;
V_$0x81c7bf8 .net "a", 0, 0, V_$0x81c8828[2];
V_$0x81c7c70 .net "b", 0, 0, V_$0x81c8af8[2];
V_$0x81c7d00 .net "cin", 0, 0, L_0x81c9948;
V_$0x81c7d70 .net "cout", 0, 0, L_0x81c9c58;
V_$0x81c7db8 .net "cout_temp", 3, 0, L_0x81c9ae0, L_0x81c9b60, L_0x81c9b10, L_0x81c9c28;
V_$0x81c7f28 .net "sum", 0, 0, L_0x81c9a38;
V_$0x81c7f68 .net "sum_temp", 0, 0, L_0x81c99a0;
S_0x81c7738 .scope module, "full_1bit_adder3" "my_1bit_full_adder_gate_level", S_0x8197dc0;
 .timescale 0;
L_0x81c9cb0 .functor XOR, V_$0x81c8af8[3], L_0x81c9c58, C<0>, C<0>;
L_0x81c9d48 .functor XOR, V_$0x81c8828[3], L_0x81c9cb0, C<0>, C<0>;
L_0x81c9df0 .functor AND, V_$0x81c8af8[3], L_0x81c9c58, C<1>, C<1>;
L_0x81c9e70 .functor AND, V_$0x81c8828[3], L_0x81c9c58, C<1>, C<1>;
L_0x81c9e20 .functor AND, V_$0x81c8828[3], V_$0x81c8af8[3], C<1>, C<1>;
L_0x81c9f38 .functor OR, L_0x81c9e20, L_0x81c9e70, C<0>, C<0>;
L_0x81c9f68 .functor OR, L_0x81c9f38, L_0x81c9df0, C<0>, C<0>;
V_$0x81c77a8 .net "a", 0, 0, V_$0x81c8828[3];
V_$0x81c7848 .net "b", 0, 0, V_$0x81c8af8[3];
V_$0x81c78b0 .net "cin", 0, 0, L_0x81c9c58;
V_$0x81c7920 .net "cout", 0, 0, L_0x81c9f68;
V_$0x81c7968 .net "cout_temp", 3, 0, L_0x81c9df0, L_0x81c9e70, L_0x81c9e20, L_0x81c9f38;
V_$0x81c7ab0 .net "sum", 0, 0, L_0x81c9d48;
V_$0x81c7b18 .net "sum_temp", 0, 0, L_0x81c9cb0;
S_0x81c7330 .scope module, "full_1bit_adder4" "my_1bit_full_adder_gate_level", S_0x8197dc0;
 .timescale 0;
L_0x81c9fc0 .functor XOR, V_$0x81c8af8[4], L_0x81c9f68, C<0>, C<0>;
L_0x81ca058 .functor XOR, V_$0x81c8828[4], L_0x81c9fc0, C<0>, C<0>;
L_0x81ca100 .functor AND, V_$0x81c8af8[4], L_0x81c9f68, C<1>, C<1>;
L_0x81ca180 .functor AND, V_$0x81c8828[4], L_0x81c9f68, C<1>, C<1>;
L_0x81ca130 .functor AND, V_$0x81c8828[4], V_$0x81c8af8[4], C<1>, C<1>;
L_0x81ca248 .functor OR, L_0x81ca130, L_0x81ca180, C<0>, C<0>;
L_0x81ca278 .functor OR, L_0x81ca248, L_0x81ca100, C<0>, C<0>;
V_$0x81c73a0 .net "a", 0, 0, V_$0x81c8828[4];
V_$0x81c7430 .net "b", 0, 0, V_$0x81c8af8[4];
V_$0x81c7498 .net "cin", 0, 0, L_0x81c9f68;
V_$0x81c7508 .net "cout", 0, 0, L_0x81ca278;
V_$0x81c7578 .net "cout_temp", 3, 0, L_0x81ca100, L_0x81ca180, L_0x81ca130, L_0x81ca248;
V_$0x81c7660 .net "sum", 0, 0, L_0x81ca058;
V_$0x81c76c8 .net "sum_temp", 0, 0, L_0x81c9fc0;
S_0x81c6ee8 .scope module, "full_1bit_adder5" "my_1bit_full_adder_gate_level", S_0x8197dc0;
 .timescale 0;
L_0x81ca2d0 .functor XOR, V_$0x81c8af8[5], L_0x81ca278, C<0>, C<0>;
L_0x81ca368 .functor XOR, V_$0x81c8828[5], L_0x81ca2d0, C<0>, C<0>;
L_0x81ca410 .functor AND, V_$0x81c8af8[5], L_0x81ca278, C<1>, C<1>;
L_0x81ca490 .functor AND, V_$0x81c8828[5], L_0x81ca278, C<1>, C<1>;
L_0x81ca440 .functor AND, V_$0x81c8828[5], V_$0x81c8af8[5], C<1>, C<1>;
L_0x81ca558 .functor OR, L_0x81ca440, L_0x81ca490, C<0>, C<0>;
L_0x81ca588 .functor OR, L_0x81ca558, L_0x81ca410, C<0>, C<0>;
V_$0x81c6f58 .net "a", 0, 0, V_$0x81c8828[5];
V_$0x81c6fd0 .net "b", 0, 0, V_$0x81c8af8[5];
V_$0x81c7038 .net "cin", 0, 0, L_0x81ca278;
V_$0x81c70b8 .net "cout", 0, 0, L_0x81ca588;
V_$0x81c7100 .net "cout_temp", 3, 0, L_0x81ca410, L_0x81ca490, L_0x81ca440, L_0x81ca558;
V_$0x81c7260 .net "sum", 0, 0, L_0x81ca368;
V_$0x81c72f0 .net "sum_temp", 0, 0, L_0x81ca2d0;
S_0x81c6a98 .scope module, "full_1bit_adder6" "my_1bit_full_adder_gate_level", S_0x8197dc0;
 .timescale 0;
L_0x81ca5e0 .functor XOR, V_$0x81c8af8[6], L_0x81ca588, C<0>, C<0>;
L_0x81ca678 .functor XOR, V_$0x81c8828[6], L_0x81ca5e0, C<0>, C<0>;
L_0x81ca720 .functor AND, V_$0x81c8af8[6], L_0x81ca588, C<1>, C<1>;
L_0x81ca7a0 .functor AND, V_$0x81c8828[6], L_0x81ca588, C<1>, C<1>;
L_0x81ca750 .functor AND, V_$0x81c8828[6], V_$0x81c8af8[6], C<1>, C<1>;
L_0x81ca868 .functor OR, L_0x81ca750, L_0x81ca7a0, C<0>, C<0>;
L_0x81ca898 .functor OR, L_0x81ca868, L_0x81ca720, C<0>, C<0>;
V_$0x81c6b08 .net "a", 0, 0, V_$0x81c8828[6];
V_$0x81c6b80 .net "b", 0, 0, V_$0x81c8af8[6];
V_$0x81c6c10 .net "cin", 0, 0, L_0x81ca588;
V_$0x81c6c80 .net "cout", 0, 0, L_0x81ca898;
V_$0x81c6cc8 .net "cout_temp", 3, 0, L_0x81ca720, L_0x81ca7a0, L_0x81ca750, L_0x81ca868;
V_$0x81c6e38 .net "sum", 0, 0, L_0x81ca678;
V_$0x81c6e78 .net "sum_temp", 0, 0, L_0x81ca5e0;
S_0x81c6648 .scope module, "full_1bit_adder7" "my_1bit_full_adder_gate_level", S_0x8197dc0;
 .timescale 0;
L_0x81ca8f0 .functor XOR, V_$0x81c8af8[7], L_0x81ca898, C<0>, C<0>;
L_0x81ca988 .functor XOR, V_$0x81c8828[7], L_0x81ca8f0, C<0>, C<0>;
L_0x81caa30 .functor AND, V_$0x81c8af8[7], L_0x81ca898, C<1>, C<1>;
L_0x81caab0 .functor AND, V_$0x81c8828[7], L_0x81ca898, C<1>, C<1>;
L_0x81caa60 .functor AND, V_$0x81c8828[7], V_$0x81c8af8[7], C<1>, C<1>;
L_0x81cab78 .functor OR, L_0x81caa60, L_0x81caab0, C<0>, C<0>;
L_0x81caba8 .functor OR, L_0x81cab78, L_0x81caa30, C<0>, C<0>;
V_$0x81c66b8 .net "a", 0, 0, V_$0x81c8828[7];
V_$0x81c6758 .net "b", 0, 0, V_$0x81c8af8[7];
V_$0x81c67c0 .net "cin", 0, 0, L_0x81ca898;
V_$0x81c6830 .net "cout", 0, 0, L_0x81caba8;
V_$0x81c6878 .net "cout_temp", 3, 0, L_0x81caa30, L_0x81caab0, L_0x81caa60, L_0x81cab78;
V_$0x81c69c0 .net "sum", 0, 0, L_0x81ca988;
V_$0x81c6a28 .net "sum_temp", 0, 0, L_0x81ca8f0;
S_0x81c6240 .scope module, "full_1bit_adder8" "my_1bit_full_adder_gate_level", S_0x8197dc0;
 .timescale 0;
L_0x81cac00 .functor XOR, V_$0x81c8af8[8], L_0x81caba8, C<0>, C<0>;
L_0x81cac98 .functor XOR, V_$0x81c8828[8], L_0x81cac00, C<0>, C<0>;
L_0x81cad40 .functor AND, V_$0x81c8af8[8], L_0x81caba8, C<1>, C<1>;
L_0x81cadc0 .functor AND, V_$0x81c8828[8], L_0x81caba8, C<1>, C<1>;
L_0x81cad70 .functor AND, V_$0x81c8828[8], V_$0x81c8af8[8], C<1>, C<1>;
L_0x81cae88 .functor OR, L_0x81cad70, L_0x81cadc0, C<0>, C<0>;
L_0x81caeb8 .functor OR, L_0x81cae88, L_0x81cad40, C<0>, C<0>;
V_$0x81c62b0 .net "a", 0, 0, V_$0x81c8828[8];
V_$0x81c6340 .net "b", 0, 0, V_$0x81c8af8[8];
V_$0x81c63a8 .net "cin", 0, 0, L_0x81caba8;
V_$0x81c6418 .net "cout", 0, 0, L_0x81caeb8;
V_$0x81c6488 .net "cout_temp", 3, 0, L_0x81cad40, L_0x81cadc0, L_0x81cad70, L_0x81cae88;
V_$0x81c6570 .net "sum", 0, 0, L_0x81cac98;
V_$0x81c65d8 .net "sum_temp", 0, 0, L_0x81cac00;
S_0x81c5df8 .scope module, "full_1bit_adder9" "my_1bit_full_adder_gate_level", S_0x8197dc0;
 .timescale 0;
L_0x81caf10 .functor XOR, V_$0x81c8af8[9], L_0x81caeb8, C<0>, C<0>;
L_0x81cafa8 .functor XOR, V_$0x81c8828[9], L_0x81caf10, C<0>, C<0>;
L_0x81cb050 .functor AND, V_$0x81c8af8[9], L_0x81caeb8, C<1>, C<1>;
L_0x81cb0d0 .functor AND, V_$0x81c8828[9], L_0x81caeb8, C<1>, C<1>;
L_0x81cb080 .functor AND, V_$0x81c8828[9], V_$0x81c8af8[9], C<1>, C<1>;
L_0x81cb198 .functor OR, L_0x81cb080, L_0x81cb0d0, C<0>, C<0>;
L_0x81cb1c8 .functor OR, L_0x81cb198, L_0x81cb050, C<0>, C<0>;
V_$0x81c5e68 .net "a", 0, 0, V_$0x81c8828[9];
V_$0x81c5ee0 .net "b", 0, 0, V_$0x81c8af8[9];
V_$0x81c5f48 .net "cin", 0, 0, L_0x81caeb8;
V_$0x81c5fc8 .net "cout", 0, 0, L_0x81cb1c8;
V_$0x81c6010 .net "cout_temp", 3, 0, L_0x81cb050, L_0x81cb0d0, L_0x81cb080, L_0x81cb198;
V_$0x81c6170 .net "sum", 0, 0, L_0x81cafa8;
V_$0x81c6200 .net "sum_temp", 0, 0, L_0x81caf10;
S_0x81c59a8 .scope module, "full_1bit_adder10" "my_1bit_full_adder_gate_level", S_0x8197dc0;
 .timescale 0;
L_0x81cb220 .functor XOR, V_$0x81c8af8[10], L_0x81cb1c8, C<0>, C<0>;
L_0x81cb2b8 .functor XOR, V_$0x81c8828[10], L_0x81cb220, C<0>, C<0>;
L_0x81cb360 .functor AND, V_$0x81c8af8[10], L_0x81cb1c8, C<1>, C<1>;
L_0x81cb3e0 .functor AND, V_$0x81c8828[10], L_0x81cb1c8, C<1>, C<1>;
L_0x81cb390 .functor AND, V_$0x81c8828[10], V_$0x81c8af8[10], C<1>, C<1>;
L_0x81cb4a8 .functor OR, L_0x81cb390, L_0x81cb3e0, C<0>, C<0>;
L_0x81cb4d8 .functor OR, L_0x81cb4a8, L_0x81cb360, C<0>, C<0>;
V_$0x81c5a18 .net "a", 0, 0, V_$0x81c8828[10];
V_$0x81c5a90 .net "b", 0, 0, V_$0x81c8af8[10];
V_$0x81c5b20 .net "cin", 0, 0, L_0x81cb1c8;
V_$0x81c5b90 .net "cout", 0, 0, L_0x81cb4d8;
V_$0x81c5bd8 .net "cout_temp", 3, 0, L_0x81cb360, L_0x81cb3e0, L_0x81cb390, L_0x81cb4a8;
V_$0x81c5d48 .net "sum", 0, 0, L_0x81cb2b8;
V_$0x81c5d88 .net "sum_temp", 0, 0, L_0x81cb220;
S_0x81c5558 .scope module, "full_1bit_adder11" "my_1bit_full_adder_gate_level", S_0x8197dc0;
 .timescale 0;
L_0x81cb530 .functor XOR, V_$0x81c8af8[11], L_0x81cb4d8, C<0>, C<0>;
L_0x81cb5c8 .functor XOR, V_$0x81c8828[11], L_0x81cb530, C<0>, C<0>;
L_0x81cb670 .functor AND, V_$0x81c8af8[11], L_0x81cb4d8, C<1>, C<1>;
L_0x81cb6f0 .functor AND, V_$0x81c8828[11], L_0x81cb4d8, C<1>, C<1>;
L_0x81cb6a0 .functor AND, V_$0x81c8828[11], V_$0x81c8af8[11], C<1>, C<1>;
L_0x81cb7b8 .functor OR, L_0x81cb6a0, L_0x81cb6f0, C<0>, C<0>;
L_0x81cb7e8 .functor OR, L_0x81cb7b8, L_0x81cb670, C<0>, C<0>;
V_$0x81c55c8 .net "a", 0, 0, V_$0x81c8828[11];
V_$0x81c5678 .net "b", 0, 0, V_$0x81c8af8[11];
V_$0x81c56e0 .net "cin", 0, 0, L_0x81cb4d8;
V_$0x81c5750 .net "cout", 0, 0, L_0x81cb7e8;
V_$0x81c5798 .net "cout_temp", 3, 0, L_0x81cb670, L_0x81cb6f0, L_0x81cb6a0, L_0x81cb7b8;
V_$0x81c58d0 .net "sum", 0, 0, L_0x81cb5c8;
V_$0x81c5938 .net "sum_temp", 0, 0, L_0x81cb530;
S_0x81b4148 .scope module, "full_1bit_adder12" "my_1bit_full_adder_gate_level", S_0x8197dc0;
 .timescale 0;
L_0x81cb840 .functor XOR, V_$0x81c8af8[12], L_0x81cb7e8, C<0>, C<0>;
L_0x81cb8d8 .functor XOR, V_$0x81c8828[12], L_0x81cb840, C<0>, C<0>;
L_0x81cb980 .functor AND, V_$0x81c8af8[12], L_0x81cb7e8, C<1>, C<1>;
L_0x81cba00 .functor AND, V_$0x81c8828[12], L_0x81cb7e8, C<1>, C<1>;
L_0x81cb9b0 .functor AND, V_$0x81c8828[12], V_$0x81c8af8[12], C<1>, C<1>;
L_0x81cbac8 .functor OR, L_0x81cb9b0, L_0x81cba00, C<0>, C<0>;
L_0x81cbaf8 .functor OR, L_0x81cbac8, L_0x81cb980, C<0>, C<0>;
V_$0x81b41b8 .net "a", 0, 0, V_$0x81c8828[12];
V_$0x81b4220 .net "b", 0, 0, V_$0x81c8af8[12];
V_$0x81b4288 .net "cin", 0, 0, L_0x81cb7e8;
V_$0x81b42f0 .net "cout", 0, 0, L_0x81cbaf8;
V_$0x81c53a8 .net "cout_temp", 3, 0, L_0x81cb980, L_0x81cba00, L_0x81cb9b0, L_0x81cbac8;
V_$0x81c5480 .net "sum", 0, 0, L_0x81cb8d8;
V_$0x81c54e8 .net "sum_temp", 0, 0, L_0x81cb840;
S_0x81b3e40 .scope module, "full_1bit_adder13" "my_1bit_full_adder_gate_level", S_0x8197dc0;
 .timescale 0;
L_0x81cbb50 .functor XOR, V_$0x81c8af8[13], L_0x81cbaf8, C<0>, C<0>;
L_0x81cbbe8 .functor XOR, V_$0x81c8828[13], L_0x81cbb50, C<0>, C<0>;
L_0x81cbc90 .functor AND, V_$0x81c8af8[13], L_0x81cbaf8, C<1>, C<1>;
L_0x81cbd10 .functor AND, V_$0x81c8828[13], L_0x81cbaf8, C<1>, C<1>;
L_0x81cbcc0 .functor AND, V_$0x81c8828[13], V_$0x81c8af8[13], C<1>, C<1>;
L_0x81cbdd8 .functor OR, L_0x81cbcc0, L_0x81cbd10, C<0>, C<0>;
L_0x81cbe08 .functor OR, L_0x81cbdd8, L_0x81cbc90, C<0>, C<0>;
V_$0x81b3eb0 .net "a", 0, 0, V_$0x81c8828[13];
V_$0x81b3f08 .net "b", 0, 0, V_$0x81c8af8[13];
V_$0x81b4388 .net "cin", 0, 0, L_0x81cbaf8;
V_$0x81b43f8 .net "cout", 0, 0, L_0x81cbe08;
V_$0x81b4440 .net "cout_temp", 3, 0, L_0x81cbc90, L_0x81cbd10, L_0x81cbcc0, L_0x81cbdd8;
V_$0x81b4038 .net "sum", 0, 0, L_0x81cbbe8;
V_$0x81b40a0 .net "sum_temp", 0, 0, L_0x81cbb50;
S_0x81b3b28 .scope module, "full_1bit_adder14" "my_1bit_full_adder_gate_level", S_0x8197dc0;
 .timescale 0;
L_0x81cbe60 .functor XOR, V_$0x81c8af8[14], L_0x81cbe08, C<0>, C<0>;
L_0x81cbef8 .functor XOR, V_$0x81c8828[14], L_0x81cbe60, C<0>, C<0>;
L_0x81cbfa0 .functor AND, V_$0x81c8af8[14], L_0x81cbe08, C<1>, C<1>;
L_0x81cc020 .functor AND, V_$0x81c8828[14], L_0x81cbe08, C<1>, C<1>;
L_0x81cbfd0 .functor AND, V_$0x81c8828[14], V_$0x81c8af8[14], C<1>, C<1>;
L_0x81cc0e8 .functor OR, L_0x81cbfd0, L_0x81cc020, C<0>, C<0>;
L_0x81cc118 .functor OR, L_0x81cc0e8, L_0x81cbfa0, C<0>, C<0>;
V_$0x81b3b98 .net "a", 0, 0, V_$0x81c8828[14];
V_$0x819f660 .net "b", 0, 0, V_$0x81c8af8[14];
V_$0x81b3be0 .net "cin", 0, 0, L_0x81cbe08;
V_$0x81b3c30 .net "cout", 0, 0, L_0x81cc118;
V_$0x81b3c78 .net "cout_temp", 3, 0, L_0x81cbfa0, L_0x81cc020, L_0x81cbfd0, L_0x81cc0e8;
V_$0x81b3da0 .net "sum", 0, 0, L_0x81cbef8;
V_$0x81b3e10 .net "sum_temp", 0, 0, L_0x81cbe60;
S_0x819f570 .scope module, "full_1bit_adder15" "my_1bit_full_adder_gate_level", S_0x8197dc0;
 .timescale 0;
L_0x81cc170 .functor XOR, V_$0x81c8af8[15], L_0x81cc118, C<0>, C<0>;
L_0x81cc208 .functor XOR, V_$0x81c8828[15], L_0x81cc170, C<0>, C<0>;
L_0x81cc2b0 .functor AND, V_$0x81c8af8[15], L_0x81cc118, C<1>, C<1>;
L_0x81cc330 .functor AND, V_$0x81c8828[15], L_0x81cc118, C<1>, C<1>;
L_0x81cc2e0 .functor AND, V_$0x81c8828[15], V_$0x81c8af8[15], C<1>, C<1>;
L_0x81cc3f8 .functor OR, L_0x81cc2e0, L_0x81cc330, C<0>, C<0>;
L_0x81cc428 .functor OR, L_0x81cc3f8, L_0x81cc2b0, C<0>, C<0>;
V_$0x81982e8 .net "a", 0, 0, V_$0x81c8828[15];
V_$0x8198410 .net "b", 0, 0, V_$0x81c8af8[15];
V_$0x81984a0 .net "cin", 0, 0, L_0x81cc118;
V_$0x819f978 .net "cout", 0, 0, L_0x81cc428;
V_$0x819fb28 .net "cout_temp", 3, 0, L_0x81cc2b0, L_0x81cc330, L_0x81cc2e0, L_0x81cc3f8;
V_$0x819f5e0 .net "sum", 0, 0, L_0x81cc208;
V_$0x819f630 .net "sum_temp", 0, 0, L_0x81cc170;
    .scope S_0x8197dc0;
T_0 ;
    %set/v V_$0x81c8828[0], 0, 7;
    %set V_$0x81c8828[7], 1;
    %set/v V_$0x81c8828[8], 0, 8;
    %set V_$0x81c8af8[0], 1;
    %set/v V_$0x81c8af8[1], 0, 15;
    %set V_$0x81c92b0[0], 0;
    %delay 10;
    %set/v V_$0x81c8828[0], 0, 7;
    %set V_$0x81c8828[7], 1;
    %set/v V_$0x81c8828[8], 0, 8;
    %set V_$0x81c8af8[0], 1;
    %set/v V_$0x81c8af8[1], 0, 15;
    %set V_$0x81c92b0[0], 1;
    %delay 10;
    %set V_$0x81c8828[0], 1;
    %set/v V_$0x81c8828[1], 0, 6;
    %set V_$0x81c8828[7], 1;
    %set/v V_$0x81c8828[8], 0, 8;
    %set V_$0x81c8af8[0], 1;
    %set/v V_$0x81c8af8[1], 0, 15;
    %set V_$0x81c92b0[0], 0;
    %delay 10;
    %set V_$0x81c8828[0], 1;
    %set/v V_$0x81c8828[1], 0, 6;
    %set V_$0x81c8828[7], 1;
    %set/v V_$0x81c8828[8], 0, 8;
    %set V_$0x81c8af8[0], 1;
    %set/v V_$0x81c8af8[1], 0, 15;
    %set V_$0x81c92b0[0], 1;
    %delay 10;
    %set/v V_$0x81c8828[0], 1, 4;
    %set/v V_$0x81c8828[4], 0, 12;
    %set/v V_$0x81c8af8[0], 1, 4;
    %set/v V_$0x81c8af8[4], 0, 12;
    %set V_$0x81c92b0[0], 0;
    %delay 10;
    %set/v V_$0x81c8828[0], 1, 4;
    %set/v V_$0x81c8828[4], 0, 12;
    %set/v V_$0x81c8af8[0], 1, 4;
    %set/v V_$0x81c8af8[4], 0, 12;
    %set V_$0x81c92b0[0], 1;
    %delay 10;
    %set V_$0x81c8828[0], 1;
    %set/v V_$0x81c8828[1], 0, 2;
    %set V_$0x81c8828[3], 1;
    %set/v V_$0x81c8828[4], 0, 12;
    %set/v V_$0x81c8af8[0], 1, 2;
    %set V_$0x81c8af8[2], 0;
    %set V_$0x81c8af8[3], 1;
    %set/v V_$0x81c8af8[4], 0, 12;
    %set V_$0x81c92b0[0], 0;
    %delay 10;
    %set V_$0x81c8828[0], 1;
    %set/v V_$0x81c8828[1], 0, 2;
    %set V_$0x81c8828[3], 1;
    %set/v V_$0x81c8828[4], 0, 12;
    %set/v V_$0x81c8af8[0], 1, 2;
    %set V_$0x81c8af8[2], 0;
    %set V_$0x81c8af8[3], 1;
    %set/v V_$0x81c8af8[4], 0, 12;
    %set V_$0x81c92b0[0], 1;
    %delay 10;
    %set V_$0x81c8828[0], 1;
    %set/v V_$0x81c8828[1], 0, 2;
    %set V_$0x81c8828[3], 1;
    %set V_$0x81c8828[4], 0;
    %set V_$0x81c8828[5], 1;
    %set V_$0x81c8828[6], 0;
    %set V_$0x81c8828[7], 1;
    %set/v V_$0x81c8828[8], 0, 8;
    %set/v V_$0x81c8af8[0], 1, 2;
    %set V_$0x81c8af8[2], 0;
    %set V_$0x81c8af8[3], 1;
    %set V_$0x81c8af8[4], 0;
    %set V_$0x81c8af8[5], 1;
    %set/v V_$0x81c8af8[6], 0, 10;
    %set V_$0x81c92b0[0], 0;
    %delay 10;
    %set V_$0x81c8828[0], 1;
    %set/v V_$0x81c8828[1], 0, 2;
    %set V_$0x81c8828[3], 1;
    %set V_$0x81c8828[4], 0;
    %set V_$0x81c8828[5], 1;
    %set V_$0x81c8828[6], 0;
    %set V_$0x81c8828[7], 1;
    %set/v V_$0x81c8828[8], 0, 8;
    %set/v V_$0x81c8af8[0], 1, 2;
    %set V_$0x81c8af8[2], 0;
    %set V_$0x81c8af8[3], 1;
    %set V_$0x81c8af8[4], 0;
    %set V_$0x81c8af8[5], 1;
    %set/v V_$0x81c8af8[6], 0, 10;
    %set V_$0x81c92b0[0], 1;
    %delay 10;
    %set V_$0x81c8828[0], 1;
    %set/v V_$0x81c8828[1], 0, 2;
    %set V_$0x81c8828[3], 1;
    %set V_$0x81c8828[4], 0;
    %set V_$0x81c8828[5], 1;
    %set V_$0x81c8828[6], 0;
    %set V_$0x81c8828[7], 1;
    %set/v V_$0x81c8828[8], 0, 8;
    %set/v V_$0x81c8af8[0], 1, 2;
    %set V_$0x81c8af8[2], 0;
    %set V_$0x81c8af8[3], 1;
    %set V_$0x81c8af8[4], 0;
    %set V_$0x81c8af8[5], 1;
    %set V_$0x81c8af8[6], 0;
    %set V_$0x81c8af8[7], 1;
    %set/v V_$0x81c8af8[8], 0, 8;
    %set V_$0x81c92b0[0], 0;
    %delay 10;
    %set/v V_$0x81c8828[0], 0, 8;
    %set V_$0x81c8828[8], 1;
    %set/v V_$0x81c8828[9], 0, 2;
    %set V_$0x81c8828[11], 1;
    %set V_$0x81c8828[12], 0;
    %set V_$0x81c8828[13], 1;
    %set V_$0x81c8828[14], 0;
    %set V_$0x81c8828[15], 1;
    %set/v V_$0x81c8af8[0], 0, 8;
    %set/v V_$0x81c8af8[8], 1, 2;
    %set V_$0x81c8af8[10], 0;
    %set V_$0x81c8af8[11], 1;
    %set V_$0x81c8af8[12], 0;
    %set V_$0x81c8af8[13], 1;
    %set V_$0x81c8af8[14], 0;
    %set V_$0x81c8af8[15], 1;
    %set V_$0x81c92b0[0], 1;
    %delay 10;
    %set/v V_$0x81c8828[0], 0, 8;
    %set V_$0x81c8828[8], 1;
    %set V_$0x81c8828[9], 0;
    %set/v V_$0x81c8828[10], 1, 2;
    %set V_$0x81c8828[12], 0;
    %set V_$0x81c8828[13], 1;
    %set V_$0x81c8828[14], 0;
    %set V_$0x81c8828[15], 1;
    %set/v V_$0x81c8af8[0], 0, 8;
    %set/v V_$0x81c8af8[8], 1, 2;
    %set V_$0x81c8af8[10], 0;
    %set/v V_$0x81c8af8[11], 1, 3;
    %set V_$0x81c8af8[14], 0;
    %set V_$0x81c8af8[15], 1;
    %set V_$0x81c92b0[0], 0;
    %delay 10;
    %set/v V_$0x81c8828[0], 0, 8;
    %set V_$0x81c8828[8], 1;
    %set V_$0x81c8828[9], 0;
    %set/v V_$0x81c8828[10], 1, 2;
    %set V_$0x81c8828[12], 0;
    %set V_$0x81c8828[13], 1;
    %set V_$0x81c8828[14], 0;
    %set V_$0x81c8828[15], 1;
    %set/v V_$0x81c8af8[0], 0, 8;
    %set/v V_$0x81c8af8[8], 1, 2;
    %set V_$0x81c8af8[10], 0;
    %set/v V_$0x81c8af8[11], 1, 3;
    %set V_$0x81c8af8[14], 0;
    %set V_$0x81c8af8[15], 1;
    %set V_$0x81c92b0[0], 1;
    %delay 10;
    %set/v V_$0x81c8828[0], 0, 8;
    %set V_$0x81c8828[8], 1;
    %set/v V_$0x81c8828[9], 0, 7;
    %set/v V_$0x81c8af8[0], 0, 9;
    %set/v V_$0x81c8af8[9], 1, 7;
    %set V_$0x81c92b0[0], 0;
    %delay 10;
    %set/v V_$0x81c8828[0], 0, 8;
    %set V_$0x81c8828[8], 1;
    %set/v V_$0x81c8828[9], 0, 7;
    %set/v V_$0x81c8af8[0], 0, 9;
    %set/v V_$0x81c8af8[9], 1, 7;
    %set V_$0x81c92b0[0], 1;
    %delay 10;
    %set/v V_$0x81c8828[0], 0, 8;
    %set V_$0x81c8828[8], 1;
    %set/v V_$0x81c8828[9], 0, 7;
    %set/v V_$0x81c8af8[0], 0, 8;
    %set/v V_$0x81c8af8[8], 1, 8;
    %set V_$0x81c92b0[0], 1;
    %delay 10;
    %set/v V_$0x81c8828[0], 0, 8;
    %set/v V_$0x81c8828[8], 1, 8;
    %set/v V_$0x81c8af8[0], 1, 16;
    %set V_$0x81c92b0[0], 0;
    %delay 10;
    %set/v V_$0x81c8828[0], 1, 16;
    %set/v V_$0x81c8af8[0], 1, 16;
    %set V_$0x81c92b0[0], 1;
    %delay 10;
    %vpi_call "$dumpflush";
    %end;
    .thread T_0;
    .scope S_0x8197dc0;
T_1 ;
    %vpi_call "$monitor", "cin\t=\t\t\t%b \na\t=\t%16b \nb\t=\t%16b \nsum\t=\t%16b \ncout\t=\t%b \ntime\t=\t%t\n-----------------------------------", V_$0x81c92b0, V_$0x81c8828, V_$0x81c8af8, V_$0x81c8d70, V_$0x81c92e0, $time;
    %vpi_call "$dumpfile", "top.dump";
    %vpi_call "$dumpvars", 4'sb0101, S_0x8197dc0;
    %end;
    .thread T_1;
